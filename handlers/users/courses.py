from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from keyboards.inline.courses_kb import course_keyboard, pk_course_keyboard, back_individual, \
    create_invoice_kb
from loader import dp
from states.invoice_info import InvoiceInfo
from utils.db_api.db_commands import get_course_db


@dp.callback_query_handler(Text(equals='courses'))
async def show_courses(call: types.CallbackQuery):
    keyboard = await course_keyboard()
    await call.message.edit_text('''üìö –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –∫—É—Ä—Å.

üñá –ù–∞–∂–∞–≤, –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º, –º–æ–¥—É–ª—è–º–∏, –∞ —Ç–∞–∫–∂–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –∫—É—Ä—Å–∞''',
                                 reply_markup=keyboard)


@dp.callback_query_handler(Text(startswith='course_'))
async def get_course(call: types.CallbackQuery):
    pk = call.data.split('_')[1]
    data = await get_course_db(pk)
    keyboard = await pk_course_keyboard(link=data.lessons_link, pk=pk)
    await call.message.edit_text(f'''üë®‚Äçüè´ <b>{data.course_title}</b>
    
üìñ {data.course_description}

üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: <b>{data.price}</b> —Ä—É–±.''', reply_markup=keyboard)


@dp.callback_query_handler(Text(equals='individual'))
async def individual_course(call: types.CallbackQuery):
    await call.message.edit_text('''üìå–î–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –ø–æ –∑–∞—è–≤–∫–µ:
üë§ –ò–º—è, –≤–æ–∑—Ä–∞—Å—Ç
üì≤ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
‚ùî –ü–æ–∂–µ–ª–∞–Ω–∏—è, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—É—á–∏—Ç—å, —á—Ç–æ —É–ª—É—á—à–∏—Ç—å –∏ —Ç.–¥.''', reply_markup=create_invoice_kb)


@dp.callback_query_handler(Text(equals='create_invoice'))
async def create_invoice(call: types.CallbackQuery):
    await call.message.edit_text('''üìÅ–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø–æ —Ñ–æ—Ä–º–µ:
üë§ –ò–º—è, –≤–æ–∑—Ä–∞—Å—Ç
üì≤ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
‚ùî –ü–æ–∂–µ–ª–∞–Ω–∏—è, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—É—á–∏—Ç—å, —á—Ç–æ —É–ª—É—á—à–∏—Ç—å –∏ —Ç.–¥.''')
    await InvoiceInfo.info.set()


@dp.message_handler(state=InvoiceInfo.info)
async def get_invoice(message: types.Message, state: FSMContext):
    info = message.text
    await state.reset_state(True)

    await message.delete()
    await dp.bot.delete_message(
        chat_id=message.from_user.id,
        message_id=message.message_id - 1
    )

    await dp.bot.send_message(
        chat_id=-1001800330006,
        text=f'''–ü—Ä–∏—à–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ!
------------------------------------
{info}
------------------------------------'''
    )
    await message.answer_sticker('CAACAgIAAxkBAAIC8mTaGDJHPPPhwvjuV6EX00Wpjq4uAAIFAwACVp29CuuXLDaLUDqGMAQ')
    await message.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', reply_markup=back_individual)

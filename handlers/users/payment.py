from aiogram import types
from aiogram.dispatcher.filters import Text

from keyboards.inline.payment_kb import payment_keyboard_kb
from loader import dp
from utils.db_api.db_commands import get_course_db


@dp.callback_query_handler(Text(startswith='row_'))
async def row_student_on_course(call: types.CallbackQuery):
    pk = call.data.split('_')[1]
    data = await get_course_db(pk)
    payment_keyboard = await payment_keyboard_kb(pk)
    await call.message.edit_text(f'''‚òëÔ∏è –í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—É—Ä—Å - "{data.course_title}"
‚¨áÔ∏è–ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ {data.price} —Ä—É–±–ª–µ–π, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ

‚ÑπÔ∏è–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é (/start) –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª—É, –∞ –∏–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–∏—Ç—Å—è –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ - "üìï –û–±—É—á–µ–Ω–∏–µ"


‚òëÔ∏è–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏—Ç—å", –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –ü–æ–ª–∏—Ç–∏–∫—É –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ü—É–±–ª–∏—á–Ω–æ–π –û—Ñ–µ—Ä—Ç–æ–π

<a href="https://telegra.ph/Rekvizity-08-14-2">üîò –†–µ–∫–≤–∏–∑–∏—Ç—ã</a>
<a href="https://telegra.ph/Politika-konfidencialnosti-personalnyh-dannyh-08-14">üîò –ü–æ–ª–∏—Ç–∏–∫–∞ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>
<a href="https://telegra.ph/Oferta-08-14">üîò –ü—É–±–ª–∏—á–Ω–∞—è –æ—Ñ–µ—Ä—Ç–∞</a>''', reply_markup=payment_keyboard,
                                 disable_web_page_preview=True)


@dp.callback_query_handler(Text(startswith='pay_'))
async def go_pay(call: types.CallbackQuery):
    await call.message.delete()

    pk = call.data.split('_')[1]
    data = await get_course_db(pk)

    prices = [types.LabeledPrice(label=f'–ö—É—Ä—Å "{data.course_title}"', amount=int(data.price) * 100)]

    await dp.bot.send_invoice(
        chat_id=call.from_user.id,
        title='üí≥ –ü–æ–∫—É–ø–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫—É—Ä—Å—É',
        description='''‚ò∫Ô∏è –î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª—É –ø–æ—á—Ç–∏ –≤ —Ä—É–∫–∞—Ö!''',
        start_parameter='success',
        provider_token='381764678:TEST:64010',
        currency='rub',
        prices=prices,
        payload='test'
    )


@dp.pre_checkout_query_handler(lambda query: True)
async def checkout(pre_checkout_query: types.PreCheckoutQuery):
    await dp.bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True,
                                           error_message="üòñ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω–µ—à–Ω—è—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —á—É—Ç—å-—á—É—Ç—å –ø–æ–∑–∂–µ.")


@dp.message_handler(content_types=types.ContentTypes.SUCCESSFUL_PAYMENT)
async def got_payment(message: types.Message):
    await dp.bot.delete_message(
        chat_id=message.chat.id,
        message_id=message.message_id - 2
    )

    await message.answer('''üéâ –ü–æ–∑–¥—Ä–∞–≤–ª–ª—è—é!
‚òëÔ∏è–û–ø–ª–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞.

–¢–µ–±–µ –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∫—É—Ä—Å–∞.
–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è, –≤–µ—Ä–Ω–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "üìï –û–±—É—á–µ–Ω–∏–µ"''')
